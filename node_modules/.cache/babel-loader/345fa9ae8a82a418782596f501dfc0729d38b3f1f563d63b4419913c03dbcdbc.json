{"ast":null,"code":"var _jsxFileName = \"G:\\\\GitHub\\\\MESTODLE\\\\frontend\\\\src\\\\components\\\\game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport config from '../configs/config';\nimport map from '../assets/map.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [guessResult, setGuessResult] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [currentCity, setCurrentCity] = useState(\"\");\n  useEffect(() => {\n    axios.get(`${config.url}/mesta/all`).then(response => {\n      const cityOptions = response.data.mesta.map(city => ({\n        value: city.nazev,\n        label: city.nazev\n      }));\n      setOptions(cityOptions);\n    }).catch(error => {\n      console.error('Chyba při načítání měst:', error);\n    });\n  }, []);\n  const handleGuessSubmit = () => {\n    if (!selectedOption) {\n      alert(\"Žádné město nebylo vybráno\");\n      return;\n    }\n    axios.post(`${config.url}/mesta/guess`, {\n      guess: selectedOption.value\n    }).then(response => {\n      setGuessResult(response.data.message);\n      if (response.data.correctGuess) {\n        setGameOver(true);\n      }\n      if (response.data.currentMesto) {\n        setCurrentCity(response.data.currentMesto.nazev);\n      }\n    }).catch(error => {\n      console.error('Chyba při odesílání tipu:', error);\n    });\n  };\n  const handleRestart = () => {\n    setGameOver(false);\n    setGuessResult(null);\n    setSelectedOption(null);\n    setCurrentCity(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MESTODLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      value: selectedOption,\n      onChange: setSelectedOption,\n      className: \"select\",\n      isDisabled: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGuessSubmit,\n      children: \"Odeslat typ u\\u017Eivatele\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      children: \"Restartovat hru\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), guessResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: guessResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), currentCity && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Aktu\\xE1ln\\u011B vybran\\xE9 m\\u011Bsto je: \", currentCity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"sN6mZoIut6EdXH9fILcRXD5XPNw=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Select","axios","config","map","jsxDEV","_jsxDEV","Game","_s","options","setOptions","selectedOption","setSelectedOption","guessResult","setGuessResult","gameOver","setGameOver","currentCity","setCurrentCity","get","url","then","response","cityOptions","data","mesta","city","value","nazev","label","catch","error","console","handleGuessSubmit","alert","post","guess","message","correctGuess","currentMesto","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","isDisabled","onClick","_c","$RefreshReg$"],"sources":["G:/GitHub/MESTODLE/frontend/src/components/game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport config from '../configs/config';\r\nimport map from '../assets/map.svg';\r\n\r\nexport default function Game() {\r\n    const [options, setOptions] = useState([]);\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [guessResult, setGuessResult] = useState(null);\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const [currentCity, setCurrentCity] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.url}/mesta/all`)\r\n            .then(response => {\r\n                const cityOptions = response.data.mesta.map(city => ({\r\n                    value: city.nazev,\r\n                    label: city.nazev\r\n                }));\r\n                setOptions(cityOptions);\r\n            })\r\n            .catch(error => {\r\n                console.error('Chyba při načítání měst:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleGuessSubmit = () => {\r\n        if (!selectedOption) {\r\n            alert(\"Žádné město nebylo vybráno\");\r\n            return;\r\n        }\r\n\r\n        axios.post(`${config.url}/mesta/guess`, { guess: selectedOption.value })\r\n        .then(response => {\r\n            setGuessResult(response.data.message);\r\n            if (response.data.correctGuess) {\r\n                setGameOver(true);\r\n            }\r\n            \r\n            if (response.data.currentMesto) {\r\n                setCurrentCity(response.data.currentMesto.nazev);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Chyba při odesílání tipu:', error);\r\n        });\r\n    };\r\n\r\n    const handleRestart = () => {\r\n        setGameOver(false);\r\n        setGuessResult(null);\r\n        setSelectedOption(null);\r\n        setCurrentCity(\"\"); \r\n    };\r\n\r\n    return (\r\n        <div className='App'>\r\n            <h2>MESTODLE</h2>\r\n            <Select \r\n                options={options}\r\n                value={selectedOption}\r\n                onChange={setSelectedOption}\r\n                className='select'\r\n                isDisabled={gameOver}\r\n            />\r\n            {!gameOver && \r\n                <button onClick={handleGuessSubmit}>Odeslat typ uživatele</button>\r\n            }\r\n            {gameOver && \r\n                <button onClick={handleRestart}>Restartovat hru</button>\r\n            }\r\n            {guessResult && \r\n                <p>{guessResult}</p>\r\n            }\r\n            <br></br>\r\n            {currentCity && \r\n                <p>Aktuálně vybrané město je: {currentCity}</p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}