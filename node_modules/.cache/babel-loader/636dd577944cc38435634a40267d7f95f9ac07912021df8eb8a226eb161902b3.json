{"ast":null,"code":"var _jsxFileName = \"G:\\\\GitHub\\\\MESTODLE\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CitySelector = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8081/api/mesta').then(response => {\n      const cityOptions = response.data.map(city => ({\n        label: city.nazev,\n        value: city.nazev\n      }));\n      setCities(cityOptions);\n    }).catch(error => console.error('Chyba při načítání měst:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    options: cities,\n    onChange: selectedOption => console.log(selectedOption),\n    className: \"city-select\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(CitySelector, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n_c = CitySelector;\nexport default CitySelector;\nvar _c;\n$RefreshReg$(_c, \"CitySelector\");","map":{"version":3,"names":["React","useState","useEffect","Select","axios","jsxDEV","_jsxDEV","CitySelector","_s","cities","setCities","get","then","response","cityOptions","data","map","city","label","nazev","value","catch","error","console","options","onChange","selectedOption","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/GitHub/MESTODLE/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport axios from 'axios';\n\nconst CitySelector = () => {\n  const [cities, setCities] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8081/api/mesta')\n      .then(response => {\n        const cityOptions = response.data.map(city => ({\n          label: city.nazev,\n          value: city.nazev\n        }));\n        setCities(cityOptions);\n      })\n      .catch(error => console.error('Chyba při načítání měst:', error));\n  }, []);\n\n  return (\n    <Select\n      options={cities}\n      onChange={selectedOption => console.log(selectedOption)}\n      className='city-select'\n    />\n  );\n};\n\nexport default CitySelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACO,GAAG,CAAC,iCAAiC,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;QAC7CC,KAAK,EAAED,IAAI,CAACE,KAAK;QACjBC,KAAK,EAAEH,IAAI,CAACE;MACd,CAAC,CAAC,CAAC;MACHT,SAAS,CAACI,WAAW,CAAC;IACxB,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA,CAACH,MAAM;IACLqB,OAAO,EAAEf,MAAO;IAChBgB,QAAQ,EAAEC,cAAc,IAAIH,OAAO,CAACI,GAAG,CAACD,cAAc,CAAE;IACxDE,SAAS,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEN,CAAC;AAACxB,EAAA,CAtBID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}