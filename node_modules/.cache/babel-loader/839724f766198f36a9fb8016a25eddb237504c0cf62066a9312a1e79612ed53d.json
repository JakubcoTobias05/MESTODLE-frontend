{"ast":null,"code":"var _jsxFileName = \"G:\\\\GitHub\\\\MESTODLE\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport axios from 'axios';\nimport config from './configs/config';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animatedComponents = makeAnimated();\nexport default function CitySelect() {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [randomMesto, setRandomMesto] = useState(null);\n  const [attempts, setAttempts] = useState(0);\n  useEffect(() => {\n    axios.get(`${config.url}/mesta/all`).then(response => {\n      const cityOptions = response.data.mesta.map(city => ({\n        value: city.nazev,\n        label: city.nazev\n      }));\n      setOptions(cityOptions);\n    }).catch(error => console.error('Chyba při načítání měst:', error));\n  }, []);\n  const handleGuessSubmit = () => {\n    if (!selectedOption) {\n      alert(\"Žádné město nebylo vybráno\");\n      return;\n    }\n    axios.post(`${config.url}/mesta/guess`, {\n      guess: selectedOption.value\n    }).then(response => {\n      alert(response.data.message);\n    }).catch(error => console.error('Chyba při odesílání tipu:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MESTODLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      components: animatedComponents,\n      options: options,\n      value: selectedOption,\n      onChange: setSelectedOption,\n      className: \"select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGuessSubmit,\n      children: \"Odeslat typ u\\u017Eivatele\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Aktu\\xE1ln\\xED h\\xE1dan\\xE9 m\\u011Bsto: \", randomMesto]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Po\\u010Det pokus\\u016F: \", attempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(CitySelect, \"uwwwGFAK0GvgXVDJpD9YANAvLnI=\");\n_c = CitySelect;\nvar _c;\n$RefreshReg$(_c, \"CitySelect\");","map":{"version":3,"names":["React","useState","useEffect","Select","makeAnimated","axios","config","jsxDEV","_jsxDEV","animatedComponents","CitySelect","_s","options","setOptions","selectedOption","setSelectedOption","randomMesto","setRandomMesto","attempts","setAttempts","get","url","then","response","cityOptions","data","mesta","map","city","value","nazev","label","catch","error","console","handleGuessSubmit","alert","post","guess","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","components","onChange","onClick","_c","$RefreshReg$"],"sources":["G:/GitHub/MESTODLE/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport axios from 'axios';\nimport config from './configs/config';\nimport './App.css';\n\nconst animatedComponents = makeAnimated();\n\nexport default function CitySelect() {\n    const [options, setOptions] = useState([]);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [randomMesto, setRandomMesto] = useState(null);\n    const [attempts, setAttempts] = useState(0);\n    \n    useEffect(() => {\n        axios.get(`${config.url}/mesta/all`)\n            .then(response => {\n                const cityOptions = response.data.mesta.map(city => ({\n                    value: city.nazev,\n                    label: city.nazev\n                }));\n                setOptions(cityOptions);\n            })\n            .catch(error => console.error('Chyba při načítání měst:', error));\n    }, []);\n\n    const handleGuessSubmit = () => {\n        if (!selectedOption) {\n            alert(\"Žádné město nebylo vybráno\");\n            return;\n        }\n\n        axios.post(`${config.url}/mesta/guess`, { guess: selectedOption.value })\n            .then(response => {\n                alert(response.data.message);\n            })\n            .catch(error => console.error('Chyba při odesílání tipu:', error));\n    };\n\n    return (\n        <div className='App'>\n            <h2>MESTODLE</h2>\n            <Select \n                components={animatedComponents}\n                options={options}\n                value={selectedOption}\n                onChange={setSelectedOption}\n                className='select'\n            />\n            <button onClick={handleGuessSubmit}>Odeslat typ uživatele</button>\n            <p>Aktuální hádané město: {randomMesto}</p>\n            <p>Počet pokusů: {attempts}</p>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}